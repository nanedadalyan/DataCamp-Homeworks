Project:  Sharing Journey
Plan

1) Create an environment (country) that will have cities, drivers and passengers.
2) Locations will be defined initially in an Enumeration Object. 
3) Drivers and Passengers are types of users, each one will be a separate class.
4) The environment will have methods to add new drivers and passengers to their corresponding lists.
5) Every Driver will have the following parameters:
   Name 
   Starting_Point    //where the journey starts
   Mid_Destination_1 //mid destination is a location between starting and final destinations, so it is not mandatory 
                      for a passenger to go till the final destination with the driver, it can go to some midpoint 
   Final_Destination 
   Date
   Time 
   Number_of_Seats 
   Price_per_Seat
   Status [Free, Booked]
6) Every Passenger will have the following parameters:
   Name
   Starting_Point
   Final_Destination
   Date
   Time_Range   //A Passenger will add time range, because maybe time is not so important for him/her; in that case the system
                  will filter the drivers not strictly by time, but by time range. In case time is an important criteria, the 
                  starting and ending point of time range will be the same, to search by exact time.
   Status [Searching, Found]
   Max_price (the maximum price that a customer is ready to pay for the journey
   
 7) Functions: 
    Through a special Payment environment the Passengers can pay for the journey and and Drivers can accept the payment.
    When a Passenger pays for the journey its payment status changes to "Paid", the Drivers account gets filled with its 
    price-per-seat amount and the driver's payment status changes to "Received". Then the driver accepts the payment, and both 
    the driver's and the passenger's payment status changes to "Accepted", at the same time the driver's account is nullified.
    This means the deal was made after which  1)the passenger's status changes to booked, 2)driver's number of seats becomes 1 seat less,
    3)if that was the driver's last seat, its status changes to booked.
    Separately, passengers can have function find_driver which finds only those drivers that satisfy their criteria. If there are
    many drivers, it will choose the one with the lowest price.
 8) Every time a new Driver is created it will be added to the list of drivers. When a new Passenger is created it can search among 
    existing drivers by all mandatory criterias (Starting_Point(=starting point of Drivers), Final_Destination(=final or mid 
    destination of Drivers), Date (=Date of Drivers), Time_Range (includes Time of Drivers), Status(Status of the driver, should 
    be free) and Number_of_Seats should be at least one. If there is a driver satisfying all the criterias, a Passenger can pay for 
    the journey and the Driver can accept the payment. This step is for making sure that the deal took place after which a Passenger's 
    status changes from Searching to Found and the Driver's status can be changed from Free to Booked, depending on the number of seats.
    If during a Passenger's search there was not found any Driver, the Passenger can remain in the Passengers' list and try the search
    later on. 
    
    
